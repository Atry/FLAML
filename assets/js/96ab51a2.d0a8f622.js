"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9015],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),h=a,d=m["".concat(s,".").concat(h)]||m[h]||p[h]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3425:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_label:"math_utils",title:"autogen.math_utils"},i=void 0,l={unversionedId:"reference/autogen/math_utils",id:"reference/autogen/math_utils",isDocsHomePage:!1,title:"autogen.math_utils",description:"remove\\_boxed",source:"@site/docs/reference/autogen/math_utils.md",sourceDirName:"reference/autogen",slug:"/reference/autogen/math_utils",permalink:"/FLAML/docs/reference/autogen/math_utils",editUrl:"https://github.com/microsoft/FLAML/edit/main/website/docs/reference/autogen/math_utils.md",tags:[],version:"current",frontMatter:{sidebar_label:"math_utils",title:"autogen.math_utils"},sidebar:"referenceSideBar",previous:{title:"code_utils",permalink:"/FLAML/docs/reference/autogen/code_utils"},next:{title:"trainer",permalink:"/FLAML/docs/reference/automl/nlp/huggingface/trainer"}},s=[{value:"remove_boxed",id:"remove_boxed",children:[],level:4},{value:"last_boxed_only_string",id:"last_boxed_only_string",children:[],level:4},{value:"is_equiv",id:"is_equiv",children:[],level:4},{value:"is_equiv_chain_of_thought",id:"is_equiv_chain_of_thought",children:[],level:4},{value:"success_metrics",id:"success_metrics",children:[],level:4}],u={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h4",{id:"remove_boxed"},"remove","_","boxed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def remove_boxed(string: str) -> Optional[str]\n")),(0,a.kt)("p",null,"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hendrycks/math"},"https://github.com/hendrycks/math"),"\nExtract the text within a ","\\","boxed{...} environment."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example"),":"),(0,a.kt)("blockquote",null,(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("p",{parentName:"blockquote"},"remove_boxed(","\\","boxed{","\\","frac{2}{3}})\n","\\","frac{2}{3}")))),(0,a.kt)("h4",{id:"last_boxed_only_string"},"last","_","boxed","_","only","_","string"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def last_boxed_only_string(string: str) -> Optional[str]\n")),(0,a.kt)("p",null,"Source: ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/hendrycks/math"},"https://github.com/hendrycks/math"),"\nExtract the last ","\\","boxed{...} or ","\\","fbox{...} element from a string."),(0,a.kt)("h4",{id:"is_equiv"},"is","_","equiv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def is_equiv(str1: Optional[str], str2: Optional[str]) -> float\n")),(0,a.kt)("p",null,"Returns (as a float) whether two strings containing math are equivalent up to differences of formatting in"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"units"),(0,a.kt)("li",{parentName:"ul"},"fractions"),(0,a.kt)("li",{parentName:"ul"},"square roots"),(0,a.kt)("li",{parentName:"ul"},"superfluous LaTeX.\nSource: ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/hendrycks/math"},"https://github.com/hendrycks/math"))),(0,a.kt)("h4",{id:"is_equiv_chain_of_thought"},"is","_","equiv","_","chain","_","of","_","thought"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def is_equiv_chain_of_thought(str1: str, str2: str) -> float\n")),(0,a.kt)("p",null,"Strips the solution first before calling ",(0,a.kt)("inlineCode",{parentName:"p"},"is_equiv"),"."),(0,a.kt)("h4",{id:"success_metrics"},"success","_","metrics"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def success_metrics(responses, solution, **args)\n")),(0,a.kt)("p",null,"Check if each response is correct."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"responses")," ",(0,a.kt)("em",{parentName:"li"},"list")," - The list of responses."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"solution")," ",(0,a.kt)("em",{parentName:"li"},"str")," - The canonical solution.")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Returns"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dict")," - The success metrics.")))}c.isMDXComponent=!0}}]);